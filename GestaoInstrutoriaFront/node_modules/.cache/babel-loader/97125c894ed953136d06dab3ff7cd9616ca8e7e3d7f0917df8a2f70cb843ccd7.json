{"ast":null,"code":"var _jsxFileName = \"/Users/flavio/senac-case-test/GestaoInstrutoriaFront/src/services/DataContext.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { createContext, useContext, useState, useEffect } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst DataContext = /*#__PURE__*/createContext();\nexport const useDataContext = () => {\n  _s();\n  return useContext(DataContext);\n};\n_s(useDataContext, \"gDsCjeeItUuvgOWf1v4qoK9RF6k=\");\nexport const DataProvider = ({\n  children\n}) => {\n  _s2();\n  const [data, setData] = useState([]);\n  const [instrutorData, setInstrutorData] = useState([]);\n  const [errorMsg, setErrorMsg] = useState([]);\n  useEffect(() => {\n    fetchData();\n  }, []);\n  useEffect(() => {\n    InstrutorDataFetch();\n  }, []);\n  const fetchData = async () => {\n    try {\n      const response = await axios.get('http://localhost:3001/instrutor/registros/123456');\n      const orderedData = response.data.data.slice().reverse();\n      setData(orderedData);\n      console.log(response.data.data);\n    } catch (error) {\n      console.error('Erro ao buscar dados da API:', error);\n    }\n  };\n  const createEducationalService = async newServiceData => {\n    try {\n      const response = await axios.post('http://localhost:3001/instrutor/registro/123456', newServiceData);\n      setData([...data, response.data]);\n      console.log('Novo serviço educacional criado:', response.data);\n      fetchData();\n    } catch (error) {\n      if (error.response) {\n        // O servidor retornou um código de status diferente de 2xx\n        console.error('Erro na resposta: ', error.response.data);\n        console.error('Código de status: ', error.response.status);\n        setErrorMsg(error.response.data);\n      } else if (error.request) {\n        // A requisição foi feita, mas não houve resposta\n        console.error('Erro na requisição: ', error.request);\n        setErrorMsg(error.request);\n      } else {\n        console.error('Erro: ', error.message);\n        setErrorMsg(error);\n      }\n    }\n  };\n  const deleteService = async id => {\n    try {\n      await axios.delete(`http://localhost:3001/instrutor/registro/123456/${id}`);\n      const updatedData = data.filter(item => item.id !== id);\n      setData(updatedData);\n      console.log('Serviço excluído com sucesso!');\n    } catch (error) {\n      console.error('Erro ao excluir serviço:', error);\n    }\n  };\n  const editService = async (id, updatedServiceData) => {\n    try {\n      const response = await axios.put(`http://localhost:3001/instrutor/registro/123456/${id}`, updatedServiceData);\n      console.log('Serviço educacional editado com sucesso:', response.data);\n      fetchData();\n    } catch (error) {\n      if (error.response) {\n        // O servidor retornou um código de status diferente de 2xx\n        console.error('Erro na resposta:', error.response.data);\n        console.error('Código de status:', error.response.status);\n        setErrorMsg(error.response.data); // Defina a mensagem de erro do servidor\n      } else if (error.request) {\n        // A requisição foi feita, mas não houve resposta\n        console.error('Erro na requisição:', error.request);\n        setErrorMsg('Erro na requisição'); // Defina uma mensagem de erro genérica\n      } else {\n        // Ocorreu um erro ao configurar a solicitação\n        console.error('Erro:', error.message);\n        setErrorMsg('Erro ao configurar a solicitação'); // Defina uma mensagem de erro genérica\n      }\n    }\n  };\n  const InstrutorDataFetch = async () => {\n    try {\n      const response = await axios.get('http://localhost:3001/instrutor/123456');\n      setInstrutorData(response.data);\n    } catch (error) {\n      console.error('Erro ao buscar dados do instrutor:', error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(DataContext.Provider, {\n    value: {\n      data,\n      instrutorData,\n      createEducationalService,\n      deleteService,\n      editService,\n      errorMsg\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 103,\n    columnNumber: 9\n  }, this);\n};\n_s2(DataProvider, \"+GgTrPgmQMRlmwvJdXUiP6doKHY=\");\n_c = DataProvider;\nvar _c;\n$RefreshReg$(_c, \"DataProvider\");","map":{"version":3,"names":["React","createContext","useContext","useState","useEffect","useNavigate","axios","jsxDEV","_jsxDEV","DataContext","useDataContext","_s","DataProvider","children","_s2","data","setData","instrutorData","setInstrutorData","errorMsg","setErrorMsg","fetchData","InstrutorDataFetch","response","get","orderedData","slice","reverse","console","log","error","createEducationalService","newServiceData","post","status","request","message","deleteService","id","delete","updatedData","filter","item","editService","updatedServiceData","put","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/flavio/senac-case-test/GestaoInstrutoriaFront/src/services/DataContext.js"],"sourcesContent":["import React, { createContext, useContext, useState, useEffect } from 'react';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport axios from 'axios';\r\n\r\nconst DataContext = createContext();\r\nexport const useDataContext = () => useContext(DataContext);\r\n\r\nexport const DataProvider = ({ children }) => {\r\n  \r\n    const [data, setData] = useState([]);\r\n    const [instrutorData, setInstrutorData] = useState([])\r\n    const [errorMsg, setErrorMsg] = useState([])\r\n  \r\n    useEffect(() => {\r\n    fetchData();\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n      InstrutorDataFetch();\r\n    }, []);\r\n  \r\n\r\n    const fetchData = async () => {\r\n      try {\r\n          const response = await axios.get('http://localhost:3001/instrutor/registros/123456');\r\n          const orderedData = response.data.data.slice().reverse();\r\n          setData(orderedData);\r\n          console.log(response.data.data);\r\n    } catch (error) {\r\n          console.error('Erro ao buscar dados da API:', error);\r\n      }\r\n    };\r\n  \r\n    const createEducationalService = async (newServiceData) => {\r\n        try {\r\n          const response = await axios.post('http://localhost:3001/instrutor/registro/123456', newServiceData);\r\n          setData([...data, response.data]);\r\n          console.log('Novo serviço educacional criado:', response.data);\r\n          fetchData();\r\n\r\n        } catch (error) {\r\n          if (error.response) {\r\n            // O servidor retornou um código de status diferente de 2xx\r\n            console.error('Erro na resposta: ', error.response.data);\r\n            console.error('Código de status: ', error.response.status);\r\n            setErrorMsg(error.response.data)\r\n\r\n        } else if (error.request) {\r\n            // A requisição foi feita, mas não houve resposta\r\n            console.error('Erro na requisição: ', error.request);\r\n            setErrorMsg(error.request)\r\n        } else {\r\n            console.error('Erro: ', error.message);\r\n            setErrorMsg(error)\r\n        }\r\n        }\r\n    };\r\n\r\n    const deleteService = async (id) => {\r\n      try {\r\n        await axios.delete(`http://localhost:3001/instrutor/registro/123456/${id}`);\r\n        const updatedData = data.filter(item => item.id !== id);\r\n        setData(updatedData);\r\n        console.log('Serviço excluído com sucesso!');\r\n      } catch (error) {\r\n        console.error('Erro ao excluir serviço:', error);\r\n      }\r\n    };\r\n\r\n    const editService = async (id, updatedServiceData) => {\r\n      try {\r\n          const response = await axios.put(`http://localhost:3001/instrutor/registro/123456/${id}`, updatedServiceData);\r\n          console.log('Serviço educacional editado com sucesso:', response.data);\r\n          fetchData();\r\n      } catch (error) {\r\n        if (error.response) {\r\n          // O servidor retornou um código de status diferente de 2xx\r\n          console.error('Erro na resposta:', error.response.data);\r\n          console.error('Código de status:', error.response.status);\r\n          setErrorMsg(error.response.data); // Defina a mensagem de erro do servidor\r\n      } else if (error.request) {\r\n          // A requisição foi feita, mas não houve resposta\r\n          console.error('Erro na requisição:', error.request);\r\n          setErrorMsg('Erro na requisição'); // Defina uma mensagem de erro genérica\r\n      } else {\r\n          // Ocorreu um erro ao configurar a solicitação\r\n          console.error('Erro:', error.message);\r\n          setErrorMsg('Erro ao configurar a solicitação'); // Defina uma mensagem de erro genérica\r\n      }\r\n      }\r\n    };\r\n\r\n  const InstrutorDataFetch = async () => {\r\n    try {\r\n      const response = await axios.get('http://localhost:3001/instrutor/123456');\r\n      setInstrutorData(response.data)\r\n  } catch (error) {\r\n      console.error('Erro ao buscar dados do instrutor:', error);\r\n  }\r\n  };\r\n\r\n    return (\r\n        <DataContext.Provider value={{ data, instrutorData, createEducationalService, deleteService, editService, errorMsg }}>\r\n            {children}\r\n        </DataContext.Provider>\r\n        );\r\n}"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}